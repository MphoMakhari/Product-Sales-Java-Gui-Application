/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.gui;

import com.product.data.Product;
import com.product.data.WeightBasedProduct;
import com.product.data.ItemBasedProduct;
import java.text.NumberFormat;
import java.util.ArrayList;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;

/**
 *
 * @author Makhari Mpho
 */
public class ProductSaleForm extends javax.swing.JFrame {

    private Product objProduct;
    private static ArrayList<Product> arList = new ArrayList<>();

    /**
     * Creates new form ProductEntryForm
     */
    public ProductSaleForm() {
        initComponents();
        radioGroup();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtBarCode = new javax.swing.JTextField();
        txtProductName = new javax.swing.JTextField();
        txtUnitPrice = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtWeight = new javax.swing.JTextField();
        txtManufacturer = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        radItemBasedProduct = new javax.swing.JRadioButton();
        radWeightBasedProduct = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        taDisplay = new javax.swing.JTextArea();
        btnViewSales = new javax.swing.JButton();
        btnViewTotalCost = new javax.swing.JButton();
        btnViewItemBased = new javax.swing.JButton();
        btnViewWeightBased = new javax.swing.JButton();
        btnDisplayTotalCosts = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Product Sales Application (Makhari M)");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Product Details"));

        jLabel1.setText("Barcode No:");

        jLabel2.setText("Product name:");

        jLabel3.setText("Unit Price:");

        jLabel4.setText("Product weight:");

        jLabel5.setText("Manufacturer:");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Product Category"));

        radItemBasedProduct.setText("Item Based Product");
        radItemBasedProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radItemBasedProductActionPerformed(evt);
            }
        });

        radWeightBasedProduct.setText("Weight Based Product");
        radWeightBasedProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radWeightBasedProductActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radItemBasedProduct)
                    .addComponent(radWeightBasedProduct))
                .addGap(0, 24, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radItemBasedProduct)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radWeightBasedProduct)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtManufacturer, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                    .addComponent(txtWeight)
                    .addComponent(txtBarCode)
                    .addComponent(txtProductName)
                    .addComponent(txtUnitPrice))
                .addGap(58, 58, 58)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 106, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtBarCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUnitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(txtManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71))
        );

        taDisplay.setColumns(20);
        taDisplay.setRows(5);
        jScrollPane1.setViewportView(taDisplay);

        btnViewSales.setText("View Sales");
        btnViewSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewSalesActionPerformed(evt);
            }
        });

        btnViewTotalCost.setText("View Total Cost");
        btnViewTotalCost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewTotalCostActionPerformed(evt);
            }
        });

        btnViewItemBased.setText("View Item Based Products");
        btnViewItemBased.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewItemBasedActionPerformed(evt);
            }
        });

        btnViewWeightBased.setText("View Weight Based Products");
        btnViewWeightBased.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewWeightBasedActionPerformed(evt);
            }
        });

        btnDisplayTotalCosts.setText("Display Total Costs");
        btnDisplayTotalCosts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisplayTotalCostsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 678, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnViewWeightBased, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnViewItemBased, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnViewTotalCost, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnViewSales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDisplayTotalCosts, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addComponent(btnViewSales)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnViewTotalCost)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnViewItemBased)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnViewWeightBased)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDisplayTotalCosts)
                        .addGap(102, 102, 102))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)
                        .addGap(32, 32, 32))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void radItemBasedProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radItemBasedProductActionPerformed
        String barcode;
        String nameOfProduct;
        double unitPrice;
        String manufacturer;

        try {

            manufacturer = txtManufacturer.getText();
            barcode = txtBarCode.getText();
            nameOfProduct = txtProductName.getText();
            unitPrice = Double.parseDouble(txtUnitPrice.getText());

            objProduct = new ItemBasedProduct(manufacturer, barcode, nameOfProduct, unitPrice);

            arList.add(objProduct);

            clearControls();

        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }


    }//GEN-LAST:event_radItemBasedProductActionPerformed

    private void radWeightBasedProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radWeightBasedProductActionPerformed
        double weight;
        String barcode;
        String nameOfProduct;
        double unitPrice;

        try {

            weight = Double.parseDouble(txtWeight.getText());
            barcode = txtBarCode.getText();
            nameOfProduct = txtProductName.getText();
            unitPrice = Double.parseDouble(txtUnitPrice.getText());

            objProduct = new WeightBasedProduct(weight, barcode, nameOfProduct, unitPrice);

            arList.add(objProduct);

            clearControls();

        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }


    }//GEN-LAST:event_radWeightBasedProductActionPerformed

    private void btnViewSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewSalesActionPerformed

        taDisplay.setText("List of products\n");

        for (Product arProducts : arList) {

            if (arProducts instanceof ItemBasedProduct) {
                taDisplay.append("Barcode " + arProducts.getBarcode() + " is "
                        + arProducts.getNameOfProduct() + " from "
                        + ((ItemBasedProduct) arProducts).getManufacturer()
                        + ", unit price " + arProducts.getUnitPrice() + "c\n");

            }
            else if (arProducts instanceof WeightBasedProduct) {
                taDisplay.append("Barcode " + arProducts.getBarcode() + " is "
                        + arProducts.getNameOfProduct()
                        + ", unit price " + arProducts.getUnitPrice() + "c/Kg, Weight "
                        + ((WeightBasedProduct) arProducts).getWeight() + "grams\n");
            }

        }


    }//GEN-LAST:event_btnViewSalesActionPerformed

    private void btnViewItemBasedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewItemBasedActionPerformed

        taDisplay.setText("List of item based products Sold\n");

        for (Product arProducts : arList) {

            if (arProducts instanceof ItemBasedProduct) {
                taDisplay.append("Barcode " + arProducts.getBarcode() + " is "
                        + arProducts.getNameOfProduct() + " from "
                        + ((ItemBasedProduct) arProducts).getManufacturer()
                        + ", unit price " + arProducts.getUnitPrice() + "c\n");

            }

        }


    }//GEN-LAST:event_btnViewItemBasedActionPerformed

    private void btnViewTotalCostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewTotalCostActionPerformed

        NumberFormat currFormat = NumberFormat.getCurrencyInstance();
        taDisplay.setText("Total cost of each item\n");

        for (Product product : arList) {
            taDisplay.append("Barcode: " + product.getBarcode() + ": "
                    + product.getNameOfProduct() + ": "
                    + currFormat.format(product.getUnitPrice()) + "\n");
        }


    }//GEN-LAST:event_btnViewTotalCostActionPerformed

    private void btnViewWeightBasedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewWeightBasedActionPerformed

        taDisplay.setText("List of weight based products Sold");

        for (Product arProducts : arList) {

            if (arProducts instanceof WeightBasedProduct) {
                taDisplay.append("Barcode " + arProducts.getBarcode() + " is "
                        + arProducts.getNameOfProduct()
                        + ", unit price " + arProducts.getUnitPrice() + "c/Kg, Weight "
                        + ((WeightBasedProduct) arProducts).getWeight() + "grams\n");
            }

        }


    }//GEN-LAST:event_btnViewWeightBasedActionPerformed

    private void btnDisplayTotalCostsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisplayTotalCostsActionPerformed

        NumberFormat currFormat = NumberFormat.getCurrencyInstance();
        double totalWeightBasedProducts = 0, totalItemBasedProducts = 0, grandTotal = 0;

        for (Product arProducts : arList) {
            if (arProducts instanceof ItemBasedProduct) {
                totalItemBasedProducts += ((ItemBasedProduct) arProducts).calculateTotalCost();

            }
            else if (arProducts instanceof WeightBasedProduct) {
                totalWeightBasedProducts += ((WeightBasedProduct) arProducts).calculateTotalCost();

            }
        }

        grandTotal = totalItemBasedProducts + totalWeightBasedProducts;

        JOptionPane.showMessageDialog(this, "The Total cost for Weight Based Products is "
                + currFormat.format(totalWeightBasedProducts)
                + "\nThe Total cost for Item Based Products is "
                + currFormat.format(totalItemBasedProducts)
                + "\nThe Grand total cost is " + currFormat.format(grandTotal));


    }//GEN-LAST:event_btnDisplayTotalCostsActionPerformed

    private void radioGroup() {
        ButtonGroup radioButtonsGroup = new ButtonGroup();
        radioButtonsGroup.add(radItemBasedProduct);
        radioButtonsGroup.add(radWeightBasedProduct);

    }

    private void clearControls() {
        txtBarCode.setText("");
        txtManufacturer.setText("");
        txtProductName.setText("");
        txtUnitPrice.setText("");
        txtWeight.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductSaleForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductSaleForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductSaleForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductSaleForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductSaleForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDisplayTotalCosts;
    private javax.swing.JButton btnViewItemBased;
    private javax.swing.JButton btnViewSales;
    private javax.swing.JButton btnViewTotalCost;
    private javax.swing.JButton btnViewWeightBased;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton radItemBasedProduct;
    private javax.swing.JRadioButton radWeightBasedProduct;
    private javax.swing.JTextArea taDisplay;
    private javax.swing.JTextField txtBarCode;
    private javax.swing.JTextField txtManufacturer;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtUnitPrice;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables
}
